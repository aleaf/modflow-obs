language: python

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

matrix:
  include:
    # test with python 3.7
    - env: ENV_FILE="ci/python37.yml"

    # test with python 3.8
    - env: ENV_FILE="ci/python38.yml"

  #allow_failures:
  #  - env: ENV_FILE="ci/environment.yml"

env:
  global:
    # Doctr deploy key for aleaf/modflow-obs
    - secure: "m5aK2cwpXeXUP4g61HuFTxePurEwpfGsS5KcAC8/AJYTFCwytIQKFtGEszieb9EJJ6dkjrpjhiH5BbVaaxxKQ4ohUPcSBuLpHUZgFSY+wGzxVOhedlSdBoambouqPfXITAwpxxjqJjV0hhsjbxcr4ezV96Zlyal9pahSuWwUWg8wLF+KsUF63H7/dA5RMdZm688Vs3iwvdv6ucTn9GEYroTP4ByVJqshqgGx5v/yv9aItMQwEElK5pU4Ib6Z7P1oI/txxmCB4dCML9dC9YKFumt5zr/B2RafmCAuoY5skMlKc1tRXfDd8a/wBs+F4DSNaA9U8ag3/MchKOK9+CqPrvBB3uFFekmqZZr/7W5Py03qE8gwxiwsl4wu138E0NXRwsSurzJQsvgrl//S5oyy23TIej0VVK64lZyKj95T5eNusdoC0RLTKbJiRH09TMc5RHxLylopfnSQFYtTiBETkOl4NjZeAnTwqLLgMdstraSbhJRcypixADWG3kVgob5oa5Km6vajTOYHRA7hGS1Ryovg1CFTAtO5CywTmLaCW155+q9vCWQiJk8WeY67w4ktAGmiKX2Nyn9KakA9WYdzZ/KEbwqlt30YmHYPocoF63kTtG3UrAmaKMtIkDv1tpkxMWJaIs/lbSMjZ5p4MmKqVt+gQtpLD0W8FNkXsDo9yKc="

install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - # for including binary execs in the path
  - #export PATH="$HOME/build/{ cookiecutter.github_username }/{ cookiecutter.repo_name }/bin/linux:$PATH"
  - echo $PATH
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update conda
  - conda info -a
  - conda env create --file="${ENV_FILE}"
  - source activate test
  - pip install -e .
  - python -m ipykernel install --user --name test --display-name "test"
  - conda list

  # Install this package and the packages listed in requirements.txt.
  #- pip install .
  # Install extra requirements for running tests and building docs.
  #- pip install -r requirements-dev.txt

script:
  - coverage run -m pytest -v --durations=20  # Run the tests and check for test coverage.
  - coverage report -m  # Generate test coverage report.
  - set -e
  - make -C docs html  # Build the documentation.
  #  Publish the documentation with builds on master or develop branch
  - doctr deploy --built-docs docs/build/html . --branch-whitelist master develop

after_success:
  - codecov  # Upload the report to codecov.
  #- flake8 --max-line-length=115  # Enforce code style (but relax line length limit a bit).
  #- make -C docs html  # Build the documentation.

