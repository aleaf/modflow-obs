{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Demo of modflow-obs\n",
    "This page demonstrates some of the core features of modflow-obs. Specifically:\n",
    "\n",
    "* creation of 'base' head and stream flow observations from time series, including\n",
    "    * in-tandem processing of observation data and MODFLOW output\n",
    "    * creation of instruction files\n",
    "* creating of derivative observations from the base observations, including\n",
    "    * sequential temporal changes in observation values at a site\n",
    "    * time series of displacement from a reference observation at a site\n",
    "    * time series of differences between observed values at two sites\n",
    "    \n",
    "    \n",
    "References:  \n",
    "[Modflow-setup package](https://github.com/aleaf/modflow-setup)  \n",
    "[Affine package](https://github.com/sgillies/affine)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:09.940058Z",
     "iopub.status.busy": "2023-10-03T14:09:09.939725Z",
     "iopub.status.idle": "2023-10-03T14:09:10.464285Z",
     "shell.execute_reply": "2023-10-03T14:09:10.462942Z"
    }
   },
   "outputs": [],
   "source": [
    "from pathlib import Path\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.dates as mdates\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Inputs\n",
    "\n",
    "Input and output paths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.468479Z",
     "iopub.status.busy": "2023-10-03T14:09:10.467310Z",
     "iopub.status.idle": "2023-10-03T14:09:10.472322Z",
     "shell.execute_reply": "2023-10-03T14:09:10.471154Z"
    }
   },
   "outputs": [],
   "source": [
    "data_path = Path('../mfobs/tests/data/shellmound/')\n",
    "\n",
    "output_folder = Path('output')\n",
    "output_folder.mkdir(exist_ok=True)  # make the output folder if it doesn't exist"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### model grid definition\n",
    "read the model grid json file created by ``modflow-setup`` and create an ``affine.Affine`` instance describing the grid orientation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.474725Z",
     "iopub.status.busy": "2023-10-03T14:09:10.474544Z",
     "iopub.status.idle": "2023-10-03T14:09:10.500666Z",
     "shell.execute_reply": "2023-10-03T14:09:10.500234Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Affine(1000.0, 0.0, 500955.0,\n",
       "       0.0, -1000.0, 1205285.0)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from mfobs.modflow import get_modelgrid_transform\n",
    "\n",
    "modelgrid_transform = get_modelgrid_transform(data_path / 'shellmound_grid.json')\n",
    "modelgrid_transform"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### model time discretization\n",
    "read table of stress period information created by ``modflow-setup``"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.533310Z",
     "iopub.status.busy": "2023-10-03T14:09:10.532821Z",
     "iopub.status.idle": "2023-10-03T14:09:10.544936Z",
     "shell.execute_reply": "2023-10-03T14:09:10.544394Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>start_datetime</th>\n",
       "      <th>end_datetime</th>\n",
       "      <th>time</th>\n",
       "      <th>per</th>\n",
       "      <th>perlen</th>\n",
       "      <th>nstp</th>\n",
       "      <th>tsmult</th>\n",
       "      <th>steady</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1998-04-01</td>\n",
       "      <td>1998-04-01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1998-04-01</td>\n",
       "      <td>2007-03-31</td>\n",
       "      <td>3288.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3287.0</td>\n",
       "      <td>10</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2007-04-01</td>\n",
       "      <td>2007-09-30</td>\n",
       "      <td>3471.0</td>\n",
       "      <td>2</td>\n",
       "      <td>183.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2007-10-01</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3654.0</td>\n",
       "      <td>3</td>\n",
       "      <td>183.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-04-01</td>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>3837.0</td>\n",
       "      <td>4</td>\n",
       "      <td>183.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  start_datetime end_datetime    time  per  perlen  nstp  tsmult  steady\n",
       "0     1998-04-01   1998-04-01     1.0    0     1.0     1     1.0    True\n",
       "1     1998-04-01   2007-03-31  3288.0    1  3287.0    10     1.5   False\n",
       "2     2007-04-01   2007-09-30  3471.0    2   183.0     5     1.5   False\n",
       "3     2007-10-01   2008-03-31  3654.0    3   183.0     5     1.5   False\n",
       "4     2008-04-01   2008-09-30  3837.0    4   183.0     5     1.5   False"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perioddata = pd.read_csv(data_path / 'tables/stress_period_data.csv')\n",
    "perioddata.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### alternatively, get the stress period information from the TDIS and STO files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.547243Z",
     "iopub.status.busy": "2023-10-03T14:09:10.546893Z",
     "iopub.status.idle": "2023-10-03T14:09:10.557549Z",
     "shell.execute_reply": "2023-10-03T14:09:10.557031Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>start_datetime</th>\n",
       "      <th>end_datetime</th>\n",
       "      <th>time</th>\n",
       "      <th>per</th>\n",
       "      <th>perlen</th>\n",
       "      <th>nstp</th>\n",
       "      <th>tsmult</th>\n",
       "      <th>steady</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1998-04-01</td>\n",
       "      <td>1998-04-01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1998-04-01</td>\n",
       "      <td>2007-03-31</td>\n",
       "      <td>3288.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3287.0</td>\n",
       "      <td>10</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2007-04-01</td>\n",
       "      <td>2007-09-30</td>\n",
       "      <td>3471.0</td>\n",
       "      <td>2</td>\n",
       "      <td>183.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2007-10-01</td>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3654.0</td>\n",
       "      <td>3</td>\n",
       "      <td>183.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-04-01</td>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>3837.0</td>\n",
       "      <td>4</td>\n",
       "      <td>183.0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  start_datetime end_datetime    time  per  perlen  nstp  tsmult  steady\n",
       "0     1998-04-01   1998-04-01     1.0    0     1.0     1     1.0    True\n",
       "1     1998-04-01   2007-03-31  3288.0    1  3287.0    10     1.5   False\n",
       "2     2007-04-01   2007-09-30  3471.0    2   183.0     5     1.5   False\n",
       "3     2007-10-01   2008-03-31  3654.0    3   183.0     5     1.5   False\n",
       "4     2008-04-01   2008-09-30  3837.0    4   183.0     5     1.5   False"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from mfobs.modflow import get_perioddata\n",
    "\n",
    "perioddata = get_perioddata(data_path / 'mfsim.tdis', data_path / 'shellmound.sto')\n",
    "perioddata.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above \"period_data\" table has start/end datetimes in MODFLOW time, but often we want a steady-state period to effectively represent a different time period. Define start and end dates that bracket the time period represented by steady-state period 0:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.559914Z",
     "iopub.status.busy": "2023-10-03T14:09:10.559574Z",
     "iopub.status.idle": "2023-10-03T14:09:10.562163Z",
     "shell.execute_reply": "2023-10-03T14:09:10.561644Z"
    }
   },
   "outputs": [],
   "source": [
    "steady_state_period_start = '2008-04-01'\n",
    "steady_state_period_end = '2008-9-30'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### model property information for T-weighted averaging"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.564415Z",
     "iopub.status.busy": "2023-10-03T14:09:10.564083Z",
     "iopub.status.idle": "2023-10-03T14:09:10.567350Z",
     "shell.execute_reply": "2023-10-03T14:09:10.566806Z"
    }
   },
   "outputs": [],
   "source": [
    "top_array = data_path / 'external/top.dat'\n",
    "botm_arrays = [data_path / 'external/botm{}.dat'.format(i)\n",
    "               for i in range(13)]\n",
    "hk_arrays = [data_path / 'external/k{}.dat'.format(i)\n",
    "             for i in range(13)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### head observation data\n",
    "We start with some head observation data that already has\n",
    "\n",
    "* been culled to model area, reprojected to model CRS, converted to model units, etc.\n",
    "* open interval information\n",
    "* `obsnme` (in the PEST parlance) prefixes identifying the sites\n",
    "* prelimary groupings based on location (optional)\n",
    "\n",
    "The observation data may or may not be broken into a data table with time series, and a metadata table with site information.\n",
    "\n",
    "The [USGS-MAP-gwmodels package](https://github.com/aleaf/usgs-map-gwmodels) is one way to create such input data from sources including the USGS National Water Information System (NWIS).\n",
    "\n",
    "The metadata (site info):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.569423Z",
     "iopub.status.busy": "2023-10-03T14:09:10.569151Z",
     "iopub.status.idle": "2023-10-03T14:09:10.587481Z",
     "shell.execute_reply": "2023-10-03T14:09:10.586949Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>head</th>\n",
       "      <th>head_std</th>\n",
       "      <th>last_head</th>\n",
       "      <th>n</th>\n",
       "      <th>aqfr_cd</th>\n",
       "      <th>nat_aqfr_cd</th>\n",
       "      <th>screen_botm</th>\n",
       "      <th>screen_top</th>\n",
       "      <th>well_depth</th>\n",
       "      <th>well_el</th>\n",
       "      <th>...</th>\n",
       "      <th>end_dt</th>\n",
       "      <th>site_no</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>well_botm</th>\n",
       "      <th>category</th>\n",
       "      <th>orig_scbot</th>\n",
       "      <th>orig_sctop</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>32.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112MRVA</td>\n",
       "      <td>N100MSRVVL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.05</td>\n",
       "      <td>...</td>\n",
       "      <td>2018-10-01</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>530104.14</td>\n",
       "      <td>1176208.54</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>heads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26.21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26.21</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112MRVA</td>\n",
       "      <td>N100MSRVVL</td>\n",
       "      <td>-3.35</td>\n",
       "      <td>14.94</td>\n",
       "      <td>136.0</td>\n",
       "      <td>38.10</td>\n",
       "      <td>...</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>USGS:333040090200601</td>\n",
       "      <td>522383.51</td>\n",
       "      <td>1175944.23</td>\n",
       "      <td>-97.90</td>\n",
       "      <td>3</td>\n",
       "      <td>-3.35</td>\n",
       "      <td>14.94</td>\n",
       "      <td>USGS:333040090200601</td>\n",
       "      <td>heads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>33.15</td>\n",
       "      <td>0.0</td>\n",
       "      <td>33.15</td>\n",
       "      <td>1.6</td>\n",
       "      <td>112MRVA</td>\n",
       "      <td>N100MSRVVL</td>\n",
       "      <td>-69.38</td>\n",
       "      <td>-57.18</td>\n",
       "      <td>109.0</td>\n",
       "      <td>39.62</td>\n",
       "      <td>...</td>\n",
       "      <td>2002-04-01</td>\n",
       "      <td>USGS:333050090153001</td>\n",
       "      <td>529954.56</td>\n",
       "      <td>1176430.50</td>\n",
       "      <td>-69.38</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>USGS:333050090153001</td>\n",
       "      <td>heads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20.73</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20.73</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112MRVA</td>\n",
       "      <td>N100MSRVVL</td>\n",
       "      <td>-1.52</td>\n",
       "      <td>10.67</td>\n",
       "      <td>125.0</td>\n",
       "      <td>36.58</td>\n",
       "      <td>...</td>\n",
       "      <td>2002-06-01</td>\n",
       "      <td>USGS:333113090232001</td>\n",
       "      <td>517359.53</td>\n",
       "      <td>1176671.36</td>\n",
       "      <td>-88.42</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.52</td>\n",
       "      <td>10.67</td>\n",
       "      <td>USGS:333113090232001</td>\n",
       "      <td>heads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22.83</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.83</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112MRVA</td>\n",
       "      <td>N100MSRVVL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.19</td>\n",
       "      <td>...</td>\n",
       "      <td>2000-10-01</td>\n",
       "      <td>USGS:333113090244701</td>\n",
       "      <td>515142.49</td>\n",
       "      <td>1176527.26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>USGS:333113090244701</td>\n",
       "      <td>heads</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    head  head_std  last_head    n  aqfr_cd nat_aqfr_cd  screen_botm  \\\n",
       "0  32.00       NaN      32.00  1.0  112MRVA  N100MSRVVL          NaN   \n",
       "1  26.21       NaN      26.21  1.0  112MRVA  N100MSRVVL        -3.35   \n",
       "2  33.15       0.0      33.15  1.6  112MRVA  N100MSRVVL       -69.38   \n",
       "3  20.73       NaN      20.73  1.0  112MRVA  N100MSRVVL        -1.52   \n",
       "4  22.83       NaN      22.83  1.0  112MRVA  N100MSRVVL          NaN   \n",
       "\n",
       "   screen_top  well_depth  well_el  ...      end_dt               site_no  \\\n",
       "0         NaN         NaN    39.05  ...  2018-10-01  USGS:333034090150501   \n",
       "1       14.94       136.0    38.10  ...  2006-09-01  USGS:333040090200601   \n",
       "2      -57.18       109.0    39.62  ...  2002-04-01  USGS:333050090153001   \n",
       "3       10.67       125.0    36.58  ...  2002-06-01  USGS:333113090232001   \n",
       "4         NaN         NaN    37.19  ...  2000-10-01  USGS:333113090244701   \n",
       "\n",
       "           x           y well_botm  category  orig_scbot  orig_sctop  \\\n",
       "0  530104.14  1176208.54       NaN         4         NaN         NaN   \n",
       "1  522383.51  1175944.23    -97.90         3       -3.35       14.94   \n",
       "2  529954.56  1176430.50    -69.38         2         NaN         NaN   \n",
       "3  517359.53  1176671.36    -88.42         3       -1.52       10.67   \n",
       "4  515142.49  1176527.26       NaN         4         NaN         NaN   \n",
       "\n",
       "              obsprefix  group  \n",
       "0  USGS:333034090150501  heads  \n",
       "1  USGS:333040090200601  heads  \n",
       "2  USGS:333050090153001  heads  \n",
       "3  USGS:333113090232001  heads  \n",
       "4  USGS:333113090244701  heads  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "head_obs_info = pd.read_csv(data_path / 'tables/preprocessed_head_obs_info.csv')\n",
    "head_obs_info.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Time series of head at the locations in the metadata:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.589608Z",
     "iopub.status.busy": "2023-10-03T14:09:10.589335Z",
     "iopub.status.idle": "2023-10-03T14:09:10.601284Z",
     "shell.execute_reply": "2023-10-03T14:09:10.600775Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>site_no</th>\n",
       "      <th>datetime</th>\n",
       "      <th>head</th>\n",
       "      <th>last_head</th>\n",
       "      <th>head_std</th>\n",
       "      <th>n</th>\n",
       "      <th>obsprefix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>1999-04-01</td>\n",
       "      <td>32.37</td>\n",
       "      <td>32.37</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>2000-10-01</td>\n",
       "      <td>31.54</td>\n",
       "      <td>31.54</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>2001-04-01</td>\n",
       "      <td>32.60</td>\n",
       "      <td>32.60</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>2001-10-01</td>\n",
       "      <td>31.96</td>\n",
       "      <td>31.96</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>USGS:333034090150501</td>\n",
       "      <td>2002-04-01</td>\n",
       "      <td>33.35</td>\n",
       "      <td>33.35</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333034090150501</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                site_no    datetime   head  last_head  head_std  n  \\\n",
       "0  USGS:333034090150501  1999-04-01  32.37      32.37       NaN  1   \n",
       "1  USGS:333034090150501  2000-10-01  31.54      31.54       NaN  1   \n",
       "2  USGS:333034090150501  2001-04-01  32.60      32.60       NaN  1   \n",
       "3  USGS:333034090150501  2001-10-01  31.96      31.96       NaN  1   \n",
       "4  USGS:333034090150501  2002-04-01  33.35      33.35       NaN  1   \n",
       "\n",
       "              obsprefix  \n",
       "0  USGS:333034090150501  \n",
       "1  USGS:333034090150501  \n",
       "2  USGS:333034090150501  \n",
       "3  USGS:333034090150501  \n",
       "4  USGS:333034090150501  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "head_obs = pd.read_csv(data_path / 'tables/preprocessed_head_obs.csv')\n",
    "head_obs.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### streamflow observations\n",
    "Flux observation inputs are similar to heads, except the metadata aren't needed\n",
    "\n",
    "* only a site number, datetime, and values column are required\n",
    "* Note: site numbers are handled as strings. Site numbers with leading zeros (such as those for many USGS gages) must be specified as strings when read by pandas, otherwise they will be cast to integers by default, and not match the MODFLOW observation names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.603477Z",
     "iopub.status.busy": "2023-10-03T14:09:10.603122Z",
     "iopub.status.idle": "2023-10-03T14:09:10.613137Z",
     "shell.execute_reply": "2023-10-03T14:09:10.612627Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>site_no</th>\n",
       "      <th>datetime</th>\n",
       "      <th>category</th>\n",
       "      <th>est_qtotal_m3d</th>\n",
       "      <th>est_qbase_m3d</th>\n",
       "      <th>meas_qtotal_m3d</th>\n",
       "      <th>meas_qbase_m3d</th>\n",
       "      <th>obsval</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>07281600</td>\n",
       "      <td>2008-01-01</td>\n",
       "      <td>measured</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10215000.0</td>\n",
       "      <td>6403120.0</td>\n",
       "      <td>6403120.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>07281600</td>\n",
       "      <td>2008-02-01</td>\n",
       "      <td>measured</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15611700.0</td>\n",
       "      <td>5332650.0</td>\n",
       "      <td>5332650.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>07281600</td>\n",
       "      <td>2008-03-01</td>\n",
       "      <td>measured</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20682200.0</td>\n",
       "      <td>15022400.0</td>\n",
       "      <td>15022400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>07281600</td>\n",
       "      <td>2008-04-01</td>\n",
       "      <td>measured</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24353200.0</td>\n",
       "      <td>12339100.0</td>\n",
       "      <td>12339100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>07281600</td>\n",
       "      <td>2008-05-01</td>\n",
       "      <td>measured</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22076000.0</td>\n",
       "      <td>13931500.0</td>\n",
       "      <td>13931500.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    site_no    datetime  category  est_qtotal_m3d  est_qbase_m3d  \\\n",
       "0  07281600  2008-01-01  measured             NaN            NaN   \n",
       "1  07281600  2008-02-01  measured             NaN            NaN   \n",
       "2  07281600  2008-03-01  measured             NaN            NaN   \n",
       "3  07281600  2008-04-01  measured             NaN            NaN   \n",
       "4  07281600  2008-05-01  measured             NaN            NaN   \n",
       "\n",
       "   meas_qtotal_m3d  meas_qbase_m3d      obsval  \n",
       "0       10215000.0       6403120.0   6403120.0  \n",
       "1       15611700.0       5332650.0   5332650.0  \n",
       "2       20682200.0      15022400.0  15022400.0  \n",
       "3       24353200.0      12339100.0  12339100.0  \n",
       "4       22076000.0      13931500.0  13931500.0  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flux_obs = pd.read_csv(data_path / 'tables/processed_flow_obs.csv', dtype={'site_no': object})\n",
    "flux_obs.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### MODFLOW-6 observation input\n",
    "\n",
    "* the MODFLOW observation names (representing sites) must match those in the ``obsprefix`` column of the preprocessed head data above\n",
    "* a key feature of **Modflow-obs** is computation of simulated heads from transmissivity-weighted averages of the head values simulated for the layers that intersect each well open interval. To take advantage of this feature, for each location (site), a MODFLOW observation must be entered for each layer.\n",
    "* [Modflow-setup](https://github.com/aleaf/modflow-setup) can create MODFLOW-6 observation input (with an observation in each layer) automatically, using the locations and ``obsprefixes`` in the above metadata file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.615291Z",
     "iopub.status.busy": "2023-10-03T14:09:10.615013Z",
     "iopub.status.idle": "2023-10-03T14:09:10.618363Z",
     "shell.execute_reply": "2023-10-03T14:09:10.617955Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BEGIN options\n",
      "  DIGITS  10\n",
      "  PRINT_INPUT\n",
      "END options\n",
      "\n",
      "BEGIN continuous  FILEOUT  shellmound.head.obs\n",
      "  usgs:333145090261901  HEAD  1 28 12\n",
      "  usgs:333145090261901  HEAD  2 28 12\n",
      "  usgs:333145090261901  HEAD  3 28 12\n",
      "  usgs:333145090261901  HEAD  4 28 12\n",
      "  usgs:333145090261901  HEAD  5 28 12\n",
      "  usgs:333145090261901  HEAD  6 28 12\n",
      "  usgs:333145090261901  HEAD  7 28 12\n",
      "  usgs:333145090261901  HEAD  8 28 12\n",
      "  usgs:333145090261901  HEAD  9 28 12\n",
      "  usgs:333145090261901  HEAD  10 28 12\n",
      "  usgs:33314509026\n"
     ]
    }
   ],
   "source": [
    "headobs_input_file = data_path / 'shellmound.obs'\n",
    "\n",
    "with open(headobs_input_file) as src:\n",
    "    print(src.read()[:500])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* **flux observation in input** to MODFLOW is not needed by modflow-obs because there aren't layers to sort out, but like head observations, the site identifiers supplied to MODFLOW must match those in the observation data file above"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### MODFLOW-6 observation output\n",
    "* simulated values at observation locations are returned in a csv file with model timesteps along the row axis, and individual observation locations (1 per layer) along the column axis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.620532Z",
     "iopub.status.busy": "2023-10-03T14:09:10.620201Z",
     "iopub.status.idle": "2023-10-03T14:09:10.624484Z",
     "shell.execute_reply": "2023-10-03T14:09:10.623957Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "time,USGS:333145090261901,USGS:333145090261901,USGS:333145090261901,USGS:333145090261901,USGS:333145\n",
      "1.000000000000,29.61748720,29.62154020,29.62504962,29.62677031,29.62761331,29.62882679,29.63409325,2\n"
     ]
    }
   ],
   "source": [
    "headobs_output_file = data_path / 'shellmound.head.obs'\n",
    "with open(headobs_output_file) as src:\n",
    "    print('\\n'.join([l[:100] for l in src.readlines()[:2]]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* SFR package observations are similar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.626753Z",
     "iopub.status.busy": "2023-10-03T14:09:10.626423Z",
     "iopub.status.idle": "2023-10-03T14:09:10.629890Z",
     "shell.execute_reply": "2023-10-03T14:09:10.629362Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "time,07288280,07288580,07288500,07281600\n",
      "1,0,-1805.6,0,-8.203e+06\n",
      "30.0038,0,-901.46,0,-8.2845e+06\n",
      "73.5094,0,0,0,-8.2622e+06\n",
      "\n"
     ]
    }
   ],
   "source": [
    "fluxobs_output_file = data_path / 'shellmound.sfr.obs.output.csv'\n",
    "\n",
    "with open(fluxobs_output_file) as src:\n",
    "    print(''.join([l for l in src.readlines()[:4]]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create a base set of head observations\n",
    "\n",
    "* reads head observation data and model output and matches values\n",
    "    * by location using the ``obsprefix`` names\n",
    "    * in time by averaging observed values to the model stress period\n",
    "    * optionally, a model stress period can be labeled as steady-state (``label_period_as_steady_state``), representing average conditions over a time period bracked by a ``steady_state_period_start`` and ``steady_state_period_end``. In this case, the simulated values for the labeled stress period are matched to average values for the steady-state time period.\n",
    "* the model output are assumed to include all layers at each observation location; observation names in the model output are assumed to correspond to ``obsprefix``es in the head observation data\n",
    "* observation layer can be specified explicitly via an ``observed_values_layer_col`` in the head observation data, or, the simulated values can be averaged vertically with transmissivity-based weighting (``observed_values_layer_col=None``). In the latter case, model property arrays (``hk_arrays``, ``top_array``, ``botm_arrays``) must be supplied. At observation sites without open interval information, all model layers are included in the transmissivity-weighted averaging.\n",
    "* observation names to match observed values to their simulated equivalents are constructed in the format of ``<obsprefix>_<date suffix>``, where obsprefix is a site identifier taken from the ``observed_values_site_id_col`` in ``observed_values_file``, and the date suffix is controlled by the ``obsnme_date_suffix_format`` parameter (default of ``'%Y%m'``). Steady-state observations are assigned a suffix of ``'ss'``.\n",
    "* simulated and observed values are written to columns formatted with ``sim_`` or ``obs_<variable_name>``"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:10.632571Z",
     "iopub.status.busy": "2023-10-03T14:09:10.632303Z",
     "iopub.status.idle": "2023-10-03T14:09:11.151732Z",
     "shell.execute_reply": "2023-10-03T14:09:11.150890Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "reading model output from ../mfobs/tests/data/shellmound/shellmound.head.obs...\n",
      "took 0.02s\n",
      "\n",
      "Dropping 191 sites with no information\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/runner/work/modflow-obs/modflow-obs/mfobs/heads.py:567: UserWarning: Stress period 8: No observations between start and end dates of 2010-04-01 and 2010-09-30!\n",
      "  warnings.warn(('Stress period {}: No observations between start and '\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "wrote 581 observations to output/processed_head_obs.dat\n",
      "wrote 581 observation instructions to output/processed_head_obs.dat.ins\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>site_no</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>n</th>\n",
       "      <th>screen_top</th>\n",
       "      <th>screen_botm</th>\n",
       "      <th>min_layer</th>\n",
       "      <th>max_layer</th>\n",
       "      <th>obgnme</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>usgs:333145090261901_201409</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>USGS:333145090261901</td>\n",
       "      <td>usgs:333145090261901</td>\n",
       "      <td>usgs:333145090261901_201409</td>\n",
       "      <td>20.906667</td>\n",
       "      <td>28.948277</td>\n",
       "      <td>27</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333145090261901_201503</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>USGS:333145090261901</td>\n",
       "      <td>usgs:333145090261901</td>\n",
       "      <td>usgs:333145090261901_201503</td>\n",
       "      <td>20.985000</td>\n",
       "      <td>29.139451</td>\n",
       "      <td>181</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333145090261901_201509</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>USGS:333145090261901</td>\n",
       "      <td>usgs:333145090261901</td>\n",
       "      <td>usgs:333145090261901_201509</td>\n",
       "      <td>21.060000</td>\n",
       "      <td>29.057794</td>\n",
       "      <td>181</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333218090271101_ss</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>USGS:333218090271101</td>\n",
       "      <td>usgs:333218090271101</td>\n",
       "      <td>usgs:333218090271101_ss</td>\n",
       "      <td>19.320000</td>\n",
       "      <td>30.279858</td>\n",
       "      <td>2</td>\n",
       "      <td>-102.15</td>\n",
       "      <td>-114.34</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333218090271101_200703</th>\n",
       "      <td>2007-03-31</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333218090271101</td>\n",
       "      <td>usgs:333218090271101</td>\n",
       "      <td>usgs:333218090271101_200703</td>\n",
       "      <td>20.111250</td>\n",
       "      <td>28.161395</td>\n",
       "      <td>8</td>\n",
       "      <td>-102.15</td>\n",
       "      <td>-114.34</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              datetime  per               site_no  \\\n",
       "obsnme                                                              \n",
       "usgs:333145090261901_201409 2014-09-30   16  USGS:333145090261901   \n",
       "usgs:333145090261901_201503 2015-03-31   17  USGS:333145090261901   \n",
       "usgs:333145090261901_201509 2015-09-30   18  USGS:333145090261901   \n",
       "usgs:333218090271101_ss     2008-09-30    0  USGS:333218090271101   \n",
       "usgs:333218090271101_200703 2007-03-31    1  USGS:333218090271101   \n",
       "\n",
       "                                        obsprefix  \\\n",
       "obsnme                                              \n",
       "usgs:333145090261901_201409  usgs:333145090261901   \n",
       "usgs:333145090261901_201503  usgs:333145090261901   \n",
       "usgs:333145090261901_201509  usgs:333145090261901   \n",
       "usgs:333218090271101_ss      usgs:333218090271101   \n",
       "usgs:333218090271101_200703  usgs:333218090271101   \n",
       "\n",
       "                                                  obsnme     obsval  \\\n",
       "obsnme                                                                \n",
       "usgs:333145090261901_201409  usgs:333145090261901_201409  20.906667   \n",
       "usgs:333145090261901_201503  usgs:333145090261901_201503  20.985000   \n",
       "usgs:333145090261901_201509  usgs:333145090261901_201509  21.060000   \n",
       "usgs:333218090271101_ss          usgs:333218090271101_ss  19.320000   \n",
       "usgs:333218090271101_200703  usgs:333218090271101_200703  20.111250   \n",
       "\n",
       "                             sim_obsval    n  screen_top  screen_botm  \\\n",
       "obsnme                                                                  \n",
       "usgs:333145090261901_201409   28.948277   27      -28.20       -28.20   \n",
       "usgs:333145090261901_201503   29.139451  181      -28.20       -28.20   \n",
       "usgs:333145090261901_201509   29.057794  181      -28.20       -28.20   \n",
       "usgs:333218090271101_ss       30.279858    2     -102.15      -114.34   \n",
       "usgs:333218090271101_200703   28.161395    8     -102.15      -114.34   \n",
       "\n",
       "                             min_layer  max_layer obgnme  \n",
       "obsnme                                                    \n",
       "usgs:333145090261901_201409          4          4   head  \n",
       "usgs:333145090261901_201503          4          4   head  \n",
       "usgs:333145090261901_201509          4          4   head  \n",
       "usgs:333218090271101_ss              6          6   head  \n",
       "usgs:333218090271101_200703          6          6   head  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from mfobs.heads import get_head_obs\n",
    "\n",
    "base_obs = get_head_obs(perioddata,\n",
    "                        modelgrid_transform=modelgrid_transform,\n",
    "                        model_output_file=headobs_output_file,\n",
    "                        observed_values_file=head_obs,\n",
    "                        observed_values_metadata_file=head_obs_info,\n",
    "                        observed_values_obsval_col='head',\n",
    "                        gwf_obs_input_file=headobs_input_file,\n",
    "                        hk_arrays=hk_arrays,\n",
    "                        top_array=top_array,\n",
    "                        botm_arrays=botm_arrays,\n",
    "                        label_period_as_steady_state=0,\n",
    "                        steady_state_period_start=steady_state_period_start,\n",
    "                        steady_state_period_end=steady_state_period_end,\n",
    "                        write_ins=True, \n",
    "                        outfile=output_folder / 'processed_head_obs.dat'\n",
    "                        )\n",
    "base_obs.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### PEST instruction files\n",
    "Can be written in tandem with the processed observation output (``write_ins=True``). This way, \n",
    "\n",
    "* observation processing functions like ``get_head_obs`` can be used initially to get an instruction file and a set of observed values for making a PEST control file\n",
    "* and subsequently for processing model output during a PEST run, that can then be read by PEST via the instruciton file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:11.154084Z",
     "iopub.status.busy": "2023-10-03T14:09:11.153741Z",
     "iopub.status.idle": "2023-10-03T14:09:11.157269Z",
     "shell.execute_reply": "2023-10-03T14:09:11.156731Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pif @\n",
      "@obsnme@\n",
      "l1 w w w w w w !usgs:333145090261901_201409! w w w w w w\n",
      "l1 w w w w w w !usgs:333145090261901_201503! w w w w w w\n",
      "\n"
     ]
    }
   ],
   "source": [
    "with open('output/processed_head_obs.dat.ins') as src:\n",
    "    print(''.join([l for l in src.readlines()[:4]]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### plot base data for a site"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:11.160127Z",
     "iopub.status.busy": "2023-10-03T14:09:11.159803Z",
     "iopub.status.idle": "2023-10-03T14:09:11.428261Z",
     "shell.execute_reply": "2023-10-03T14:09:11.427592Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "site = 'usgs:334420090140101'\n",
    "site_values = base_obs.loc[base_obs.obsprefix == site, ['datetime', 'obsval', 'sim_obsval', 'obsnme']].copy()\n",
    "site_values.index = site_values.datetime\n",
    "ax = site_values[['obsval', 'sim_obsval']].plot(marker='o')\n",
    "ax.set_title(site)\n",
    "ax.set_ylabel('Head, in meters above sea level')\n",
    "ax.grid()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Changes in head through time\n",
    "The base values returned by ``get_head_obs`` can be processed further into temporal head differences: \n",
    "\n",
    "* similar to ``get_head_obs`` the ``get_temporal_differences`` function can also write an instruction file in tandem\n",
    "* by default, sequential differences are computed by subtracting the previous time from the current,\n",
    "    so a positive value indicates an increase.\n",
    "* Sequential difference observations can help inform PEST about seasonal trends in the observation data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:11.431213Z",
     "iopub.status.busy": "2023-10-03T14:09:11.430830Z",
     "iopub.status.idle": "2023-10-03T14:09:11.597646Z",
     "shell.execute_reply": "2023-10-03T14:09:11.596881Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "wrote 499 observations to output/processed_head_obs_tdiffs.dat\n",
      "wrote 499 observation instructions to output/processed_head_obs_tdiffs.dat.ins\n"
     ]
    }
   ],
   "source": [
    "from mfobs.obs import get_temporal_differences\n",
    "\n",
    "thead_diffs = get_temporal_differences(base_obs,\n",
    "                                       perioddata,\n",
    "                                       obs_values_col='obsval',\n",
    "                                       sim_values_col='sim_obsval',\n",
    "                                       variable='head',\n",
    "                                       write_ins=True,\n",
    "                                       outfile=output_folder / 'processed_head_obs_tdiffs.dat')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### plot temporal head differences for a site"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:11.600331Z",
     "iopub.status.busy": "2023-10-03T14:09:11.599969Z",
     "iopub.status.idle": "2023-10-03T14:09:11.843868Z",
     "shell.execute_reply": "2023-10-03T14:09:11.843119Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "site = 'usgs:334420090140101'\n",
    "site_values = thead_diffs.loc[thead_diffs.obsprefix == site, ['datetime', 'obsval', 'sim_obsval', 'obsnme']].copy()\n",
    "site_values.index = site_values.datetime\n",
    "ax = site_values[['obsval', 'sim_obsval']].plot(marker='o')\n",
    "ax.set_title(site)\n",
    "ax.set_ylabel('Head change, in meters')\n",
    "ax.grid()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Displacement in head through time\n",
    "The ``get_temporal_differences`` function can also be used to compute displacement (total change) from a reference time, via the ``get_displacement`` flag. \n",
    "* Displacements are computed at sites with 2 or more observations. \n",
    "* The reference time is specified by the ``displacement_from`` argument. \n",
    "    * The first observation at each site that occurs on or after the reference time is then used as the datum in computing the displacements. \n",
    "    * If no reference time is specified, the first observation is used as the datum for each site.\n",
    "* Displacement observations can help inform PEST about longer-term temporal trends in the observation data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:11.846553Z",
     "iopub.status.busy": "2023-10-03T14:09:11.846172Z",
     "iopub.status.idle": "2023-10-03T14:09:11.860874Z",
     "shell.execute_reply": "2023-10-03T14:09:11.860026Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>site_no</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>n</th>\n",
       "      <th>screen_top</th>\n",
       "      <th>screen_botm</th>\n",
       "      <th>min_layer</th>\n",
       "      <th>max_layer</th>\n",
       "      <th>obgnme</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>usgs:333145090261901_201409</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>USGS:333145090261901</td>\n",
       "      <td>usgs:333145090261901</td>\n",
       "      <td>usgs:333145090261901_201409</td>\n",
       "      <td>20.906667</td>\n",
       "      <td>28.948277</td>\n",
       "      <td>27</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333145090261901_201503</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>USGS:333145090261901</td>\n",
       "      <td>usgs:333145090261901</td>\n",
       "      <td>usgs:333145090261901_201503</td>\n",
       "      <td>20.985000</td>\n",
       "      <td>29.139451</td>\n",
       "      <td>181</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333145090261901_201509</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>USGS:333145090261901</td>\n",
       "      <td>usgs:333145090261901</td>\n",
       "      <td>usgs:333145090261901_201509</td>\n",
       "      <td>21.060000</td>\n",
       "      <td>29.057794</td>\n",
       "      <td>181</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>-28.20</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333218090271101_ss</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>USGS:333218090271101</td>\n",
       "      <td>usgs:333218090271101</td>\n",
       "      <td>usgs:333218090271101_ss</td>\n",
       "      <td>19.320000</td>\n",
       "      <td>30.279858</td>\n",
       "      <td>2</td>\n",
       "      <td>-102.15</td>\n",
       "      <td>-114.34</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:333218090271101_200703</th>\n",
       "      <td>2007-03-31</td>\n",
       "      <td>1</td>\n",
       "      <td>USGS:333218090271101</td>\n",
       "      <td>usgs:333218090271101</td>\n",
       "      <td>usgs:333218090271101_200703</td>\n",
       "      <td>20.111250</td>\n",
       "      <td>28.161395</td>\n",
       "      <td>8</td>\n",
       "      <td>-102.15</td>\n",
       "      <td>-114.34</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:334630090274201_201303</th>\n",
       "      <td>2013-03-31</td>\n",
       "      <td>13</td>\n",
       "      <td>USGS:334630090274201</td>\n",
       "      <td>usgs:334630090274201</td>\n",
       "      <td>usgs:334630090274201_201303</td>\n",
       "      <td>25.250000</td>\n",
       "      <td>32.533311</td>\n",
       "      <td>2</td>\n",
       "      <td>7.21</td>\n",
       "      <td>-69.26</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:334630090274201_201403</th>\n",
       "      <td>2014-03-31</td>\n",
       "      <td>15</td>\n",
       "      <td>USGS:334630090274201</td>\n",
       "      <td>usgs:334630090274201</td>\n",
       "      <td>usgs:334630090274201_201403</td>\n",
       "      <td>24.980000</td>\n",
       "      <td>32.572959</td>\n",
       "      <td>1</td>\n",
       "      <td>7.21</td>\n",
       "      <td>-69.26</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:334630090274201_201409</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>USGS:334630090274201</td>\n",
       "      <td>usgs:334630090274201</td>\n",
       "      <td>usgs:334630090274201_201409</td>\n",
       "      <td>25.360000</td>\n",
       "      <td>32.508527</td>\n",
       "      <td>1</td>\n",
       "      <td>7.21</td>\n",
       "      <td>-69.26</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:334630090274201_201503</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>USGS:334630090274201</td>\n",
       "      <td>usgs:334630090274201</td>\n",
       "      <td>usgs:334630090274201_201503</td>\n",
       "      <td>24.970000</td>\n",
       "      <td>32.794816</td>\n",
       "      <td>1</td>\n",
       "      <td>7.21</td>\n",
       "      <td>-69.26</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>usgs:334630090274201_201509</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>USGS:334630090274201</td>\n",
       "      <td>usgs:334630090274201</td>\n",
       "      <td>usgs:334630090274201_201509</td>\n",
       "      <td>25.330000</td>\n",
       "      <td>32.683903</td>\n",
       "      <td>1</td>\n",
       "      <td>7.21</td>\n",
       "      <td>-69.26</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>head</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>581 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              datetime  per               site_no  \\\n",
       "obsnme                                                              \n",
       "usgs:333145090261901_201409 2014-09-30   16  USGS:333145090261901   \n",
       "usgs:333145090261901_201503 2015-03-31   17  USGS:333145090261901   \n",
       "usgs:333145090261901_201509 2015-09-30   18  USGS:333145090261901   \n",
       "usgs:333218090271101_ss     2008-09-30    0  USGS:333218090271101   \n",
       "usgs:333218090271101_200703 2007-03-31    1  USGS:333218090271101   \n",
       "...                                ...  ...                   ...   \n",
       "usgs:334630090274201_201303 2013-03-31   13  USGS:334630090274201   \n",
       "usgs:334630090274201_201403 2014-03-31   15  USGS:334630090274201   \n",
       "usgs:334630090274201_201409 2014-09-30   16  USGS:334630090274201   \n",
       "usgs:334630090274201_201503 2015-03-31   17  USGS:334630090274201   \n",
       "usgs:334630090274201_201509 2015-09-30   18  USGS:334630090274201   \n",
       "\n",
       "                                        obsprefix  \\\n",
       "obsnme                                              \n",
       "usgs:333145090261901_201409  usgs:333145090261901   \n",
       "usgs:333145090261901_201503  usgs:333145090261901   \n",
       "usgs:333145090261901_201509  usgs:333145090261901   \n",
       "usgs:333218090271101_ss      usgs:333218090271101   \n",
       "usgs:333218090271101_200703  usgs:333218090271101   \n",
       "...                                           ...   \n",
       "usgs:334630090274201_201303  usgs:334630090274201   \n",
       "usgs:334630090274201_201403  usgs:334630090274201   \n",
       "usgs:334630090274201_201409  usgs:334630090274201   \n",
       "usgs:334630090274201_201503  usgs:334630090274201   \n",
       "usgs:334630090274201_201509  usgs:334630090274201   \n",
       "\n",
       "                                                  obsnme     obsval  \\\n",
       "obsnme                                                                \n",
       "usgs:333145090261901_201409  usgs:333145090261901_201409  20.906667   \n",
       "usgs:333145090261901_201503  usgs:333145090261901_201503  20.985000   \n",
       "usgs:333145090261901_201509  usgs:333145090261901_201509  21.060000   \n",
       "usgs:333218090271101_ss          usgs:333218090271101_ss  19.320000   \n",
       "usgs:333218090271101_200703  usgs:333218090271101_200703  20.111250   \n",
       "...                                                  ...        ...   \n",
       "usgs:334630090274201_201303  usgs:334630090274201_201303  25.250000   \n",
       "usgs:334630090274201_201403  usgs:334630090274201_201403  24.980000   \n",
       "usgs:334630090274201_201409  usgs:334630090274201_201409  25.360000   \n",
       "usgs:334630090274201_201503  usgs:334630090274201_201503  24.970000   \n",
       "usgs:334630090274201_201509  usgs:334630090274201_201509  25.330000   \n",
       "\n",
       "                             sim_obsval    n  screen_top  screen_botm  \\\n",
       "obsnme                                                                  \n",
       "usgs:333145090261901_201409   28.948277   27      -28.20       -28.20   \n",
       "usgs:333145090261901_201503   29.139451  181      -28.20       -28.20   \n",
       "usgs:333145090261901_201509   29.057794  181      -28.20       -28.20   \n",
       "usgs:333218090271101_ss       30.279858    2     -102.15      -114.34   \n",
       "usgs:333218090271101_200703   28.161395    8     -102.15      -114.34   \n",
       "...                                 ...  ...         ...          ...   \n",
       "usgs:334630090274201_201303   32.533311    2        7.21       -69.26   \n",
       "usgs:334630090274201_201403   32.572959    1        7.21       -69.26   \n",
       "usgs:334630090274201_201409   32.508527    1        7.21       -69.26   \n",
       "usgs:334630090274201_201503   32.794816    1        7.21       -69.26   \n",
       "usgs:334630090274201_201509   32.683903    1        7.21       -69.26   \n",
       "\n",
       "                             min_layer  max_layer obgnme  \n",
       "obsnme                                                    \n",
       "usgs:333145090261901_201409          4          4   head  \n",
       "usgs:333145090261901_201503          4          4   head  \n",
       "usgs:333145090261901_201509          4          4   head  \n",
       "usgs:333218090271101_ss              6          6   head  \n",
       "usgs:333218090271101_200703          6          6   head  \n",
       "...                                ...        ...    ...  \n",
       "usgs:334630090274201_201303          3          6   head  \n",
       "usgs:334630090274201_201403          3          6   head  \n",
       "usgs:334630090274201_201409          3          6   head  \n",
       "usgs:334630090274201_201503          3          6   head  \n",
       "usgs:334630090274201_201509          3          6   head  \n",
       "\n",
       "[581 rows x 13 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_obs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:11.863136Z",
     "iopub.status.busy": "2023-10-03T14:09:11.862955Z",
     "iopub.status.idle": "2023-10-03T14:09:12.022703Z",
     "shell.execute_reply": "2023-10-03T14:09:12.022098Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "wrote 292 observations to output/processed_head_obs_disp.dat\n",
      "wrote 292 observation instructions to output/processed_head_obs_disp.dat.ins\n"
     ]
    }
   ],
   "source": [
    "thead_disp = get_temporal_differences(base_obs,\n",
    "                                       perioddata,\n",
    "                                       obs_values_col='obsval',\n",
    "                                       sim_values_col='sim_obsval',\n",
    "                                       variable='head',\n",
    "                                       get_displacements=True,\n",
    "                                       displacement_from='2010-01-01',\n",
    "                                       write_ins=True,\n",
    "                                       outfile=output_folder / 'processed_head_obs_disp.dat')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plot the displacement observations\n",
    "Note: the datum observation (where displacement is zero) is excluded."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.025263Z",
     "iopub.status.busy": "2023-10-03T14:09:12.024921Z",
     "iopub.status.idle": "2023-10-03T14:09:12.232639Z",
     "shell.execute_reply": "2023-10-03T14:09:12.231911Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "site = 'usgs:334420090140101'\n",
    "site_values = thead_disp.loc[thead_disp.obsprefix == site, ['datetime', 'obsval', 'sim_obsval', 'obsnme']].copy()\n",
    "\n",
    "# for some reason, pd.DataFrame.plot() incorrectly shifts the xticks in this case\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(site_values.datetime, site_values.obsval, marker='o')\n",
    "ax.plot(site_values.datetime, site_values.sim_obsval, marker='o')\n",
    "ax.set_title(site)\n",
    "ax.set_ylabel('Head change, in meters')\n",
    "fig.autofmt_xdate()\n",
    "ax.grid()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Head differences between sites\n",
    "\n",
    "Similarly, the base values returned by ``get_head_obs`` can also be processed into spatial head differences. \n",
    "These may represent nested wells, well-lake differences or simply two nearby wells that represent an important\n",
    "head gradient.\n",
    "\n",
    "* similar to ``get_head_obs`` the ``get_spatial_differences`` function can also write an instruction file in tandem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.236001Z",
     "iopub.status.busy": "2023-10-03T14:09:12.234923Z",
     "iopub.status.idle": "2023-10-03T14:09:12.256651Z",
     "shell.execute_reply": "2023-10-03T14:09:12.256164Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "wrote 3 observations to output/processed_head_obs_sdiffs.dat\n",
      "wrote 3 observation instructions to output/processed_head_obs_sdiffs.dat.ins\n"
     ]
    }
   ],
   "source": [
    "from mfobs.obs import get_spatial_differences\n",
    "\n",
    "head_difference_sites = {'usgs:333904090123801':  # well in money, ms\n",
    "                         'usgs:333145090261901'  # well approx. 15 mi southwest in cone of depression\n",
    "                             }\n",
    "\n",
    "shead_diffs = get_spatial_differences(base_obs,\n",
    "                                      perioddata,\n",
    "                                      difference_sites=head_difference_sites,\n",
    "                                      obs_values_col='obsval',\n",
    "                                      sim_values_col='sim_obsval',\n",
    "                                      write_ins=True,\n",
    "                                      outfile=output_folder / 'processed_head_obs_sdiffs.dat')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.259071Z",
     "iopub.status.busy": "2023-10-03T14:09:12.258723Z",
     "iopub.status.idle": "2023-10-03T14:09:12.273752Z",
     "shell.execute_reply": "2023-10-03T14:09:12.272696Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme1</th>\n",
       "      <th>base_obsval1</th>\n",
       "      <th>base_sim_obsval1</th>\n",
       "      <th>screen_top1</th>\n",
       "      <th>screen_botm1</th>\n",
       "      <th>obsnme2</th>\n",
       "      <th>base_obsval2</th>\n",
       "      <th>base_sim_obsval2</th>\n",
       "      <th>screen_top2</th>\n",
       "      <th>screen_botm2</th>\n",
       "      <th>obs_diff</th>\n",
       "      <th>sim_diff</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>type</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>per</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>usgs:333904090123801-d-usgs:333145090261901</td>\n",
       "      <td>usgs:333904090123801_201409</td>\n",
       "      <td>35.163333</td>\n",
       "      <td>40.340913</td>\n",
       "      <td>23.15</td>\n",
       "      <td>10.96</td>\n",
       "      <td>usgs:333145090261901_201409</td>\n",
       "      <td>20.906667</td>\n",
       "      <td>28.948277</td>\n",
       "      <td>-28.2</td>\n",
       "      <td>-28.2</td>\n",
       "      <td>14.256667</td>\n",
       "      <td>11.392636</td>\n",
       "      <td>usgs:333904090123801-d-usgs:333145090261901_20...</td>\n",
       "      <td>14.256667</td>\n",
       "      <td>11.392636</td>\n",
       "      <td>head_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>usgs:333904090123801-d-usgs:333145090261901</td>\n",
       "      <td>usgs:333904090123801_201503</td>\n",
       "      <td>35.258333</td>\n",
       "      <td>41.410755</td>\n",
       "      <td>23.15</td>\n",
       "      <td>10.96</td>\n",
       "      <td>usgs:333145090261901_201503</td>\n",
       "      <td>20.985000</td>\n",
       "      <td>29.139451</td>\n",
       "      <td>-28.2</td>\n",
       "      <td>-28.2</td>\n",
       "      <td>14.273333</td>\n",
       "      <td>12.271304</td>\n",
       "      <td>usgs:333904090123801-d-usgs:333145090261901_20...</td>\n",
       "      <td>14.273333</td>\n",
       "      <td>12.271304</td>\n",
       "      <td>head_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>usgs:333904090123801-d-usgs:333145090261901</td>\n",
       "      <td>usgs:333904090123801_201509</td>\n",
       "      <td>35.358333</td>\n",
       "      <td>40.785719</td>\n",
       "      <td>23.15</td>\n",
       "      <td>10.96</td>\n",
       "      <td>usgs:333145090261901_201509</td>\n",
       "      <td>21.060000</td>\n",
       "      <td>29.057794</td>\n",
       "      <td>-28.2</td>\n",
       "      <td>-28.2</td>\n",
       "      <td>14.298333</td>\n",
       "      <td>11.727924</td>\n",
       "      <td>usgs:333904090123801-d-usgs:333145090261901_20...</td>\n",
       "      <td>14.298333</td>\n",
       "      <td>11.727924</td>\n",
       "      <td>head_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      datetime  per                                    obsprefix  \\\n",
       "per                                                                \n",
       "16  2014-09-30   16  usgs:333904090123801-d-usgs:333145090261901   \n",
       "17  2015-03-31   17  usgs:333904090123801-d-usgs:333145090261901   \n",
       "18  2015-09-30   18  usgs:333904090123801-d-usgs:333145090261901   \n",
       "\n",
       "                         obsnme1  base_obsval1  base_sim_obsval1  screen_top1  \\\n",
       "per                                                                             \n",
       "16   usgs:333904090123801_201409     35.163333         40.340913        23.15   \n",
       "17   usgs:333904090123801_201503     35.258333         41.410755        23.15   \n",
       "18   usgs:333904090123801_201509     35.358333         40.785719        23.15   \n",
       "\n",
       "     screen_botm1                      obsnme2  base_obsval2  \\\n",
       "per                                                            \n",
       "16          10.96  usgs:333145090261901_201409     20.906667   \n",
       "17          10.96  usgs:333145090261901_201503     20.985000   \n",
       "18          10.96  usgs:333145090261901_201509     21.060000   \n",
       "\n",
       "     base_sim_obsval2  screen_top2  screen_botm2   obs_diff   sim_diff  \\\n",
       "per                                                                      \n",
       "16          28.948277        -28.2         -28.2  14.256667  11.392636   \n",
       "17          29.139451        -28.2         -28.2  14.273333  12.271304   \n",
       "18          29.057794        -28.2         -28.2  14.298333  11.727924   \n",
       "\n",
       "                                                obsnme     obsval  sim_obsval  \\\n",
       "per                                                                             \n",
       "16   usgs:333904090123801-d-usgs:333145090261901_20...  14.256667   11.392636   \n",
       "17   usgs:333904090123801-d-usgs:333145090261901_20...  14.273333   12.271304   \n",
       "18   usgs:333904090123801-d-usgs:333145090261901_20...  14.298333   11.727924   \n",
       "\n",
       "         obgnme                type  \n",
       "per                                  \n",
       "16   head_sdiff  spatial difference  \n",
       "17   head_sdiff  spatial difference  \n",
       "18   head_sdiff  spatial difference  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "shead_diffs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.276149Z",
     "iopub.status.busy": "2023-10-03T14:09:12.275809Z",
     "iopub.status.idle": "2023-10-03T14:09:12.445043Z",
     "shell.execute_reply": "2023-10-03T14:09:12.444066Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Head difference, in meters')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "site = shead_diffs.obsprefix.values[0]\n",
    "site_values = shead_diffs.loc[shead_diffs.obsprefix == site, ['datetime', 'obsval', 'sim_obsval', 'obsnme']].copy()\n",
    "site_values.index = site_values.datetime\n",
    "ax = site_values[['obsval', 'sim_obsval']].plot()\n",
    "ax.set_title(site)\n",
    "ax.set_ylabel('Head difference, in meters')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create a base set of flux observations\n",
    "\n",
    "* similar to head observations, the first step in flux observation processing is to create a set of base observations\n",
    "* observation data and model output are read and matched\n",
    "    * by location using the ``obsprefix`` names\n",
    "    * in time by averaging observed values to the model stress period\n",
    "    * optionally, a model stress period can be labeled as steady-state (``label_period_as_steady_state``), representing average conditions over a time period bracked by a ``steady_state_period_start`` and ``steady_state_period_end``. In this case, the simulated values for the labeled stress period are matched to average values for the steady-state time period.\n",
    "* observation names to match observed values to their simulated equivalents are constructed in the format of ``<obsprefix>_<date suffix>``, where obsprefix is a site identifier taken from the ``observed_values_site_id_col`` in ``observed_values_file``, and the date suffix is controlled by the ``obsnme_date_suffix_format`` parameter (default of ``'%Y%m'``). Steady-state observations are assigned a suffix of ``'ss'``.\n",
    "* simulated and observed values are written to columns formatted with ``sim_`` or ``obs_<variable_name>``"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.447398Z",
     "iopub.status.busy": "2023-10-03T14:09:12.447175Z",
     "iopub.status.idle": "2023-10-03T14:09:12.450788Z",
     "shell.execute_reply": "2023-10-03T14:09:12.450231Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PosixPath('../mfobs/tests/data/shellmound/shellmound.sfr.obs.output.csv')"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fluxobs_output_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.453461Z",
     "iopub.status.busy": "2023-10-03T14:09:12.453165Z",
     "iopub.status.idle": "2023-10-03T14:09:12.695837Z",
     "shell.execute_reply": "2023-10-03T14:09:12.695287Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "reading model output from ../mfobs/tests/data/shellmound/shellmound.sfr.obs.output.csv...\n",
      "took 0.00s\n",
      "\n",
      "Dropping 1 sites with no information\n",
      "wrote 53 observations to output/processed_flux_obs.dat\n",
      "wrote 53 observation instructions to output/processed_flux_obs.dat.ins\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>site_no</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>obgnme</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>07281600_ss</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_ss</td>\n",
       "      <td>1.349688e+07</td>\n",
       "      <td>6290400.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200803</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200803</td>\n",
       "      <td>8.919390e+06</td>\n",
       "      <td>7155800.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200809</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>4</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200809</td>\n",
       "      <td>1.349688e+07</td>\n",
       "      <td>6290400.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200903</th>\n",
       "      <td>2009-03-31</td>\n",
       "      <td>5</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200903</td>\n",
       "      <td>1.547445e+07</td>\n",
       "      <td>6740000.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200909</th>\n",
       "      <td>2009-09-30</td>\n",
       "      <td>6</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200909</td>\n",
       "      <td>1.365627e+07</td>\n",
       "      <td>7182900.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  datetime  per   site_no obsprefix           obsnme  \\\n",
       "obsnme                                                                 \n",
       "07281600_ss     2008-09-30    0  07281600  07281600      07281600_ss   \n",
       "07281600_200803 2008-03-31    3  07281600  07281600  07281600_200803   \n",
       "07281600_200809 2008-09-30    4  07281600  07281600  07281600_200809   \n",
       "07281600_200903 2009-03-31    5  07281600  07281600  07281600_200903   \n",
       "07281600_200909 2009-09-30    6  07281600  07281600  07281600_200909   \n",
       "\n",
       "                       obsval  sim_obsval obgnme  \n",
       "obsnme                                            \n",
       "07281600_ss      1.349688e+07   6290400.0   None  \n",
       "07281600_200803  8.919390e+06   7155800.0   None  \n",
       "07281600_200809  1.349688e+07   6290400.0   None  \n",
       "07281600_200903  1.547445e+07   6740000.0   None  \n",
       "07281600_200909  1.365627e+07   7182900.0   None  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from mfobs.obs import get_base_obs\n",
    "from mfobs.modflow import get_mf6_single_variable_obs\n",
    "\n",
    "# first read the MF6 SFR package results into a dataframe \n",
    "# with the appropriate formatting for get_base_obs\n",
    "sfr_results = get_mf6_single_variable_obs(perioddata, \n",
    "                                          model_output_file=fluxobs_output_file,\n",
    "                                          )\n",
    "\n",
    "base_flux_obs = get_base_obs(perioddata,\n",
    "                             model_output=sfr_results,\n",
    "                             observed_values_file=flux_obs,\n",
    "                             observed_values_site_id_col='site_no',\n",
    "                             observed_values_datetime_col='datetime',\n",
    "                             observed_values_obsval_col='obsval',\n",
    "                             label_period_as_steady_state=0,\n",
    "                             steady_state_period_start=steady_state_period_start,\n",
    "                             steady_state_period_end=steady_state_period_end,\n",
    "                             write_ins=True, \n",
    "                             outfile=output_folder / 'processed_flux_obs.dat'\n",
    "                             )\n",
    "base_flux_obs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.698757Z",
     "iopub.status.busy": "2023-10-03T14:09:12.698470Z",
     "iopub.status.idle": "2023-10-03T14:09:12.702291Z",
     "shell.execute_reply": "2023-10-03T14:09:12.701784Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['07281600', '07288280', '07288500'], dtype=object)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_flux_obs.obsprefix.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.704567Z",
     "iopub.status.busy": "2023-10-03T14:09:12.704234Z",
     "iopub.status.idle": "2023-10-03T14:09:12.995602Z",
     "shell.execute_reply": "2023-10-03T14:09:12.994504Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Base flow, in $m^3/d$')"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "site = '07281600'\n",
    "site_values = base_flux_obs.loc[base_flux_obs.obsprefix == site, ['datetime', 'obsval', 'sim_obsval', 'obsnme']].copy()\n",
    "site_values.index = site_values.datetime\n",
    "ax = site_values[['obsval', 'sim_obsval']].plot()\n",
    "ax.set_title(site)\n",
    "ax.set_ylabel('Base flow, in $m^3/d$')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Changes in streamflow through time\n",
    "Similar to heads, the ``get_temporal_differences`` function can be used to create observations of the changes in streamflow through time at each site.\n",
    "\n",
    "* Differences are computed by subtracting the previous time from the current,\n",
    "    so a positive value indicates an increase."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:12.998107Z",
     "iopub.status.busy": "2023-10-03T14:09:12.997902Z",
     "iopub.status.idle": "2023-10-03T14:09:13.014682Z",
     "shell.execute_reply": "2023-10-03T14:09:13.014001Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>site_no</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>obgnme</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>obsnme</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>07281600_ss</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_ss</td>\n",
       "      <td>1.349688e+07</td>\n",
       "      <td>6290400.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200803</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200803</td>\n",
       "      <td>8.919390e+06</td>\n",
       "      <td>7155800.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200809</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>4</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200809</td>\n",
       "      <td>1.349688e+07</td>\n",
       "      <td>6290400.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200903</th>\n",
       "      <td>2009-03-31</td>\n",
       "      <td>5</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200903</td>\n",
       "      <td>1.547445e+07</td>\n",
       "      <td>6740000.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_200909</th>\n",
       "      <td>2009-09-30</td>\n",
       "      <td>6</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200909</td>\n",
       "      <td>1.365627e+07</td>\n",
       "      <td>7182900.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201003</th>\n",
       "      <td>2010-03-31</td>\n",
       "      <td>7</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201003</td>\n",
       "      <td>3.217932e+07</td>\n",
       "      <td>7544900.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201009</th>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>8</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201009</td>\n",
       "      <td>1.156270e+07</td>\n",
       "      <td>6223100.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201103</th>\n",
       "      <td>2011-03-31</td>\n",
       "      <td>9</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201103</td>\n",
       "      <td>5.627040e+06</td>\n",
       "      <td>7018200.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201109</th>\n",
       "      <td>2011-09-30</td>\n",
       "      <td>10</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201109</td>\n",
       "      <td>1.008706e+07</td>\n",
       "      <td>5969700.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201203</th>\n",
       "      <td>2012-03-31</td>\n",
       "      <td>11</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201203</td>\n",
       "      <td>1.292090e+07</td>\n",
       "      <td>6991600.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201209</th>\n",
       "      <td>2012-09-30</td>\n",
       "      <td>12</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201209</td>\n",
       "      <td>2.679248e+06</td>\n",
       "      <td>5844400.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201303</th>\n",
       "      <td>2013-03-31</td>\n",
       "      <td>13</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201303</td>\n",
       "      <td>1.772296e+07</td>\n",
       "      <td>6874300.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201309</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>14</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201309</td>\n",
       "      <td>1.303247e+07</td>\n",
       "      <td>6117900.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201403</th>\n",
       "      <td>2014-03-31</td>\n",
       "      <td>15</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201403</td>\n",
       "      <td>1.353548e+07</td>\n",
       "      <td>6442100.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201409</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201409</td>\n",
       "      <td>1.065890e+07</td>\n",
       "      <td>6171300.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201503</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201503</td>\n",
       "      <td>1.473788e+07</td>\n",
       "      <td>8164100.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07281600_201509</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201509</td>\n",
       "      <td>1.607698e+07</td>\n",
       "      <td>6688300.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_ss</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_ss</td>\n",
       "      <td>2.745655e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_200703</th>\n",
       "      <td>2007-03-31</td>\n",
       "      <td>1</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_200703</td>\n",
       "      <td>1.069265e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_200709</th>\n",
       "      <td>2007-09-30</td>\n",
       "      <td>2</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_200709</td>\n",
       "      <td>3.478525e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_200803</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_200803</td>\n",
       "      <td>2.555816e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_200809</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>4</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_200809</td>\n",
       "      <td>2.745655e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_200903</th>\n",
       "      <td>2009-03-31</td>\n",
       "      <td>5</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_200903</td>\n",
       "      <td>2.805353e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_200909</th>\n",
       "      <td>2009-09-30</td>\n",
       "      <td>6</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_200909</td>\n",
       "      <td>5.704373e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201003</th>\n",
       "      <td>2010-03-31</td>\n",
       "      <td>7</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201003</td>\n",
       "      <td>1.596739e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201009</th>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>8</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201009</td>\n",
       "      <td>2.497488e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201103</th>\n",
       "      <td>2011-03-31</td>\n",
       "      <td>9</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201103</td>\n",
       "      <td>1.064802e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201109</th>\n",
       "      <td>2011-09-30</td>\n",
       "      <td>10</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201109</td>\n",
       "      <td>2.067107e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201203</th>\n",
       "      <td>2012-03-31</td>\n",
       "      <td>11</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201203</td>\n",
       "      <td>3.397002e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201209</th>\n",
       "      <td>2012-09-30</td>\n",
       "      <td>12</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201209</td>\n",
       "      <td>1.080637e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201303</th>\n",
       "      <td>2013-03-31</td>\n",
       "      <td>13</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201303</td>\n",
       "      <td>2.233306e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201309</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>14</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201309</td>\n",
       "      <td>3.354905e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201403</th>\n",
       "      <td>2014-03-31</td>\n",
       "      <td>15</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201403</td>\n",
       "      <td>2.422443e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201409</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201409</td>\n",
       "      <td>2.579483e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201503</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201503</td>\n",
       "      <td>9.891381e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288280_201509</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280</td>\n",
       "      <td>07288280_201509</td>\n",
       "      <td>4.557125e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_ss</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_ss</td>\n",
       "      <td>8.167170e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_200803</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_200803</td>\n",
       "      <td>4.251600e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_200809</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>4</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_200809</td>\n",
       "      <td>8.167170e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_200903</th>\n",
       "      <td>2009-03-31</td>\n",
       "      <td>5</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_200903</td>\n",
       "      <td>4.680965e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_200909</th>\n",
       "      <td>2009-09-30</td>\n",
       "      <td>6</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_200909</td>\n",
       "      <td>9.767105e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201003</th>\n",
       "      <td>2010-03-31</td>\n",
       "      <td>7</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201003</td>\n",
       "      <td>2.503657e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201009</th>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>8</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201009</td>\n",
       "      <td>4.230712e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201103</th>\n",
       "      <td>2011-03-31</td>\n",
       "      <td>9</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201103</td>\n",
       "      <td>1.219689e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201109</th>\n",
       "      <td>2011-09-30</td>\n",
       "      <td>10</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201109</td>\n",
       "      <td>3.340273e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201203</th>\n",
       "      <td>2012-03-31</td>\n",
       "      <td>11</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201203</td>\n",
       "      <td>5.342074e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201209</th>\n",
       "      <td>2012-09-30</td>\n",
       "      <td>12</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201209</td>\n",
       "      <td>2.296468e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201303</th>\n",
       "      <td>2013-03-31</td>\n",
       "      <td>13</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201303</td>\n",
       "      <td>5.800736e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201309</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>14</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201309</td>\n",
       "      <td>8.871058e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201403</th>\n",
       "      <td>2014-03-31</td>\n",
       "      <td>15</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201403</td>\n",
       "      <td>6.518142e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201409</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>16</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201409</td>\n",
       "      <td>8.534180e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201503</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>17</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201503</td>\n",
       "      <td>8.822385e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>07288500_201509</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>18</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500</td>\n",
       "      <td>07288500_201509</td>\n",
       "      <td>6.059555e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  datetime  per   site_no obsprefix           obsnme  \\\n",
       "obsnme                                                                 \n",
       "07281600_ss     2008-09-30    0  07281600  07281600      07281600_ss   \n",
       "07281600_200803 2008-03-31    3  07281600  07281600  07281600_200803   \n",
       "07281600_200809 2008-09-30    4  07281600  07281600  07281600_200809   \n",
       "07281600_200903 2009-03-31    5  07281600  07281600  07281600_200903   \n",
       "07281600_200909 2009-09-30    6  07281600  07281600  07281600_200909   \n",
       "07281600_201003 2010-03-31    7  07281600  07281600  07281600_201003   \n",
       "07281600_201009 2010-09-30    8  07281600  07281600  07281600_201009   \n",
       "07281600_201103 2011-03-31    9  07281600  07281600  07281600_201103   \n",
       "07281600_201109 2011-09-30   10  07281600  07281600  07281600_201109   \n",
       "07281600_201203 2012-03-31   11  07281600  07281600  07281600_201203   \n",
       "07281600_201209 2012-09-30   12  07281600  07281600  07281600_201209   \n",
       "07281600_201303 2013-03-31   13  07281600  07281600  07281600_201303   \n",
       "07281600_201309 2013-09-30   14  07281600  07281600  07281600_201309   \n",
       "07281600_201403 2014-03-31   15  07281600  07281600  07281600_201403   \n",
       "07281600_201409 2014-09-30   16  07281600  07281600  07281600_201409   \n",
       "07281600_201503 2015-03-31   17  07281600  07281600  07281600_201503   \n",
       "07281600_201509 2015-09-30   18  07281600  07281600  07281600_201509   \n",
       "07288280_ss     2008-09-30    0  07288280  07288280      07288280_ss   \n",
       "07288280_200703 2007-03-31    1  07288280  07288280  07288280_200703   \n",
       "07288280_200709 2007-09-30    2  07288280  07288280  07288280_200709   \n",
       "07288280_200803 2008-03-31    3  07288280  07288280  07288280_200803   \n",
       "07288280_200809 2008-09-30    4  07288280  07288280  07288280_200809   \n",
       "07288280_200903 2009-03-31    5  07288280  07288280  07288280_200903   \n",
       "07288280_200909 2009-09-30    6  07288280  07288280  07288280_200909   \n",
       "07288280_201003 2010-03-31    7  07288280  07288280  07288280_201003   \n",
       "07288280_201009 2010-09-30    8  07288280  07288280  07288280_201009   \n",
       "07288280_201103 2011-03-31    9  07288280  07288280  07288280_201103   \n",
       "07288280_201109 2011-09-30   10  07288280  07288280  07288280_201109   \n",
       "07288280_201203 2012-03-31   11  07288280  07288280  07288280_201203   \n",
       "07288280_201209 2012-09-30   12  07288280  07288280  07288280_201209   \n",
       "07288280_201303 2013-03-31   13  07288280  07288280  07288280_201303   \n",
       "07288280_201309 2013-09-30   14  07288280  07288280  07288280_201309   \n",
       "07288280_201403 2014-03-31   15  07288280  07288280  07288280_201403   \n",
       "07288280_201409 2014-09-30   16  07288280  07288280  07288280_201409   \n",
       "07288280_201503 2015-03-31   17  07288280  07288280  07288280_201503   \n",
       "07288280_201509 2015-09-30   18  07288280  07288280  07288280_201509   \n",
       "07288500_ss     2008-09-30    0  07288500  07288500      07288500_ss   \n",
       "07288500_200803 2008-03-31    3  07288500  07288500  07288500_200803   \n",
       "07288500_200809 2008-09-30    4  07288500  07288500  07288500_200809   \n",
       "07288500_200903 2009-03-31    5  07288500  07288500  07288500_200903   \n",
       "07288500_200909 2009-09-30    6  07288500  07288500  07288500_200909   \n",
       "07288500_201003 2010-03-31    7  07288500  07288500  07288500_201003   \n",
       "07288500_201009 2010-09-30    8  07288500  07288500  07288500_201009   \n",
       "07288500_201103 2011-03-31    9  07288500  07288500  07288500_201103   \n",
       "07288500_201109 2011-09-30   10  07288500  07288500  07288500_201109   \n",
       "07288500_201203 2012-03-31   11  07288500  07288500  07288500_201203   \n",
       "07288500_201209 2012-09-30   12  07288500  07288500  07288500_201209   \n",
       "07288500_201303 2013-03-31   13  07288500  07288500  07288500_201303   \n",
       "07288500_201309 2013-09-30   14  07288500  07288500  07288500_201309   \n",
       "07288500_201403 2014-03-31   15  07288500  07288500  07288500_201403   \n",
       "07288500_201409 2014-09-30   16  07288500  07288500  07288500_201409   \n",
       "07288500_201503 2015-03-31   17  07288500  07288500  07288500_201503   \n",
       "07288500_201509 2015-09-30   18  07288500  07288500  07288500_201509   \n",
       "\n",
       "                       obsval  sim_obsval obgnme  \n",
       "obsnme                                            \n",
       "07281600_ss      1.349688e+07   6290400.0   None  \n",
       "07281600_200803  8.919390e+06   7155800.0   None  \n",
       "07281600_200809  1.349688e+07   6290400.0   None  \n",
       "07281600_200903  1.547445e+07   6740000.0   None  \n",
       "07281600_200909  1.365627e+07   7182900.0   None  \n",
       "07281600_201003  3.217932e+07   7544900.0   None  \n",
       "07281600_201009  1.156270e+07   6223100.0   None  \n",
       "07281600_201103  5.627040e+06   7018200.0   None  \n",
       "07281600_201109  1.008706e+07   5969700.0   None  \n",
       "07281600_201203  1.292090e+07   6991600.0   None  \n",
       "07281600_201209  2.679248e+06   5844400.0   None  \n",
       "07281600_201303  1.772296e+07   6874300.0   None  \n",
       "07281600_201309  1.303247e+07   6117900.0   None  \n",
       "07281600_201403  1.353548e+07   6442100.0   None  \n",
       "07281600_201409  1.065890e+07   6171300.0   None  \n",
       "07281600_201503  1.473788e+07   8164100.0   None  \n",
       "07281600_201509  1.607698e+07   6688300.0   None  \n",
       "07288280_ss      2.745655e+05         0.0   None  \n",
       "07288280_200703  1.069265e+06         0.0   None  \n",
       "07288280_200709  3.478525e+05         0.0   None  \n",
       "07288280_200803  2.555816e+05         0.0   None  \n",
       "07288280_200809  2.745655e+05         0.0   None  \n",
       "07288280_200903  2.805353e+05         0.0   None  \n",
       "07288280_200909  5.704373e+05         0.0   None  \n",
       "07288280_201003  1.596739e+06         0.0   None  \n",
       "07288280_201009  2.497488e+05         0.0   None  \n",
       "07288280_201103  1.064802e+05         0.0   None  \n",
       "07288280_201109  2.067107e+05         0.0   None  \n",
       "07288280_201203  3.397002e+05         0.0   None  \n",
       "07288280_201209  1.080637e+05         0.0   None  \n",
       "07288280_201303  2.233306e+05         0.0   None  \n",
       "07288280_201309  3.354905e+05         0.0   None  \n",
       "07288280_201403  2.422443e+05         0.0   None  \n",
       "07288280_201409  2.579483e+05         0.0   None  \n",
       "07288280_201503  9.891381e+05         0.0   None  \n",
       "07288280_201509  4.557125e+05         0.0   None  \n",
       "07288500_ss      8.167170e+05         0.0   None  \n",
       "07288500_200803  4.251600e+05         0.0   None  \n",
       "07288500_200809  8.167170e+05         0.0   None  \n",
       "07288500_200903  4.680965e+05         0.0   None  \n",
       "07288500_200909  9.767105e+05         0.0   None  \n",
       "07288500_201003  2.503657e+06         0.0   None  \n",
       "07288500_201009  4.230712e+05         0.0   None  \n",
       "07288500_201103  1.219689e+05         0.0   None  \n",
       "07288500_201109  3.340273e+05         0.0   None  \n",
       "07288500_201203  5.342074e+05         0.0   None  \n",
       "07288500_201209  2.296468e+05         0.0   None  \n",
       "07288500_201303  5.800736e+05         0.0   None  \n",
       "07288500_201309  8.871058e+05         0.0   None  \n",
       "07288500_201403  6.518142e+05         0.0   None  \n",
       "07288500_201409  8.534180e+05         0.0   None  \n",
       "07288500_201503  8.822385e+05         0.0   None  \n",
       "07288500_201509  6.059555e+05         0.0   None  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base_flux_obs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:13.016813Z",
     "iopub.status.busy": "2023-10-03T14:09:13.016633Z",
     "iopub.status.idle": "2023-10-03T14:09:13.044077Z",
     "shell.execute_reply": "2023-10-03T14:09:13.043514Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "wrote 47 observations to output/processed_flux_obs_tdiffs.dat\n",
      "wrote 47 observation instructions to output/processed_flux_obs_tdiffs.dat.ins\n"
     ]
    }
   ],
   "source": [
    "flux_tdiff = get_temporal_differences(base_flux_obs, \n",
    "                                      perioddata,\n",
    "                                      obs_values_col='obsval',\n",
    "                                      sim_values_col='sim_obsval',\n",
    "                                      variable='flux',\n",
    "                                      write_ins=True,\n",
    "                                      outfile=output_folder / 'processed_flux_obs_tdiffs.dat')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:13.046770Z",
     "iopub.status.busy": "2023-10-03T14:09:13.046341Z",
     "iopub.status.idle": "2023-10-03T14:09:13.057524Z",
     "shell.execute_reply": "2023-10-03T14:09:13.056957Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obs_flux</th>\n",
       "      <th>sim_flux</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>4</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200809d200803</td>\n",
       "      <td>1.349688e+07</td>\n",
       "      <td>6290400.0</td>\n",
       "      <td>4.577493e+06</td>\n",
       "      <td>-865400.0</td>\n",
       "      <td>None_tdiff</td>\n",
       "      <td>temporal flux difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2009-03-31</td>\n",
       "      <td>5</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200903d200809</td>\n",
       "      <td>1.547445e+07</td>\n",
       "      <td>6740000.0</td>\n",
       "      <td>1.977567e+06</td>\n",
       "      <td>449600.0</td>\n",
       "      <td>None_tdiff</td>\n",
       "      <td>temporal flux difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2009-09-30</td>\n",
       "      <td>6</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_200909d200903</td>\n",
       "      <td>1.365627e+07</td>\n",
       "      <td>7182900.0</td>\n",
       "      <td>-1.818178e+06</td>\n",
       "      <td>442900.0</td>\n",
       "      <td>None_tdiff</td>\n",
       "      <td>temporal flux difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2010-03-31</td>\n",
       "      <td>7</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201003d200909</td>\n",
       "      <td>3.217932e+07</td>\n",
       "      <td>7544900.0</td>\n",
       "      <td>1.852304e+07</td>\n",
       "      <td>362000.0</td>\n",
       "      <td>None_tdiff</td>\n",
       "      <td>temporal flux difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2010-09-30</td>\n",
       "      <td>8</td>\n",
       "      <td>07281600</td>\n",
       "      <td>07281600_201009d201003</td>\n",
       "      <td>1.156270e+07</td>\n",
       "      <td>6223100.0</td>\n",
       "      <td>-2.061661e+07</td>\n",
       "      <td>-1321800.0</td>\n",
       "      <td>None_tdiff</td>\n",
       "      <td>temporal flux difference</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    datetime  per obsprefix                  obsnme      obs_flux   sim_flux  \\\n",
       "1 2008-09-30    4  07281600  07281600_200809d200803  1.349688e+07  6290400.0   \n",
       "2 2009-03-31    5  07281600  07281600_200903d200809  1.547445e+07  6740000.0   \n",
       "3 2009-09-30    6  07281600  07281600_200909d200903  1.365627e+07  7182900.0   \n",
       "4 2010-03-31    7  07281600  07281600_201003d200909  3.217932e+07  7544900.0   \n",
       "5 2010-09-30    8  07281600  07281600_201009d201003  1.156270e+07  6223100.0   \n",
       "\n",
       "         obsval  sim_obsval      obgnme                      type  \n",
       "1  4.577493e+06   -865400.0  None_tdiff  temporal flux difference  \n",
       "2  1.977567e+06    449600.0  None_tdiff  temporal flux difference  \n",
       "3 -1.818178e+06    442900.0  None_tdiff  temporal flux difference  \n",
       "4  1.852304e+07    362000.0  None_tdiff  temporal flux difference  \n",
       "5 -2.061661e+07  -1321800.0  None_tdiff  temporal flux difference  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flux_tdiff.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:13.059749Z",
     "iopub.status.busy": "2023-10-03T14:09:13.059405Z",
     "iopub.status.idle": "2023-10-03T14:09:13.269053Z",
     "shell.execute_reply": "2023-10-03T14:09:13.267816Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Change in streamflow, $m^3/d$')"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "flux_tdiff.index = flux_tdiff.datetime\n",
    "site = '07281600'\n",
    "site_data = flux_tdiff.loc[flux_tdiff.obsprefix == site].copy()\n",
    "ax = site_data[['obsval', 'sim_obsval']].plot()\n",
    "ax.set_ylabel('Change in streamflow, $m^3/d$')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Change in streamflow between two sites\n",
    "Similar to heads, the ``get_spatial_differences`` function can be used to difference stream flows between sites to create observations of stream flow gain or loss.\n",
    "\n",
    "* Differences are computed by subtracting the values site(s) from the key site, so for example, to represent a gain in streamflow as positive, the downstream site should be key site."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:13.271446Z",
     "iopub.status.busy": "2023-10-03T14:09:13.271238Z",
     "iopub.status.idle": "2023-10-03T14:09:13.292229Z",
     "shell.execute_reply": "2023-10-03T14:09:13.291314Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "wrote 17 observations to output/processed_flux_obs_sdiffs.dat\n",
      "wrote 17 observation instructions to output/processed_flux_obs_sdiffs.dat.ins\n"
     ]
    }
   ],
   "source": [
    "flux_difference_sites = {'07288500':   # sunflower r. at sunflower\n",
    "                         '07288280'  # sunflower r. at merigold\n",
    "                         }\n",
    "\n",
    "flux_sdiff = get_spatial_differences(base_flux_obs, perioddata,\n",
    "                                     flux_difference_sites,\n",
    "                                     obs_values_col='obsval',\n",
    "                                     sim_values_col='sim_obsval',\n",
    "                                     write_ins=True,\n",
    "                                     outfile=output_folder / 'processed_flux_obs_sdiffs.dat')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:13.294566Z",
     "iopub.status.busy": "2023-10-03T14:09:13.294051Z",
     "iopub.status.idle": "2023-10-03T14:09:13.305966Z",
     "shell.execute_reply": "2023-10-03T14:09:13.305555Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>per</th>\n",
       "      <th>obsprefix</th>\n",
       "      <th>obsnme1</th>\n",
       "      <th>base_obsval1</th>\n",
       "      <th>base_sim_obsval1</th>\n",
       "      <th>obsnme2</th>\n",
       "      <th>base_obsval2</th>\n",
       "      <th>base_sim_obsval2</th>\n",
       "      <th>obs_diff</th>\n",
       "      <th>sim_diff</th>\n",
       "      <th>obsnme</th>\n",
       "      <th>obsval</th>\n",
       "      <th>sim_obsval</th>\n",
       "      <th>obgnme</th>\n",
       "      <th>type</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>per</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>0</td>\n",
       "      <td>07288500-d-07288280</td>\n",
       "      <td>07288500_ss</td>\n",
       "      <td>816717.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288280_ss</td>\n",
       "      <td>274565.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>542151.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288500-d-07288280_ss</td>\n",
       "      <td>542151.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2008-03-31</td>\n",
       "      <td>3</td>\n",
       "      <td>07288500-d-07288280</td>\n",
       "      <td>07288500_200803</td>\n",
       "      <td>425160.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288280_200803</td>\n",
       "      <td>255581.650000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>169578.350000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288500-d-07288280_200803</td>\n",
       "      <td>169578.350000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2008-09-30</td>\n",
       "      <td>4</td>\n",
       "      <td>07288500-d-07288280</td>\n",
       "      <td>07288500_200809</td>\n",
       "      <td>816717.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288280_200809</td>\n",
       "      <td>274565.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>542151.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288500-d-07288280_200809</td>\n",
       "      <td>542151.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2009-03-31</td>\n",
       "      <td>5</td>\n",
       "      <td>07288500-d-07288280</td>\n",
       "      <td>07288500_200903</td>\n",
       "      <td>468096.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288280_200903</td>\n",
       "      <td>280535.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>187561.166667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288500-d-07288280_200903</td>\n",
       "      <td>187561.166667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2009-09-30</td>\n",
       "      <td>6</td>\n",
       "      <td>07288500-d-07288280</td>\n",
       "      <td>07288500_200909</td>\n",
       "      <td>976710.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288280_200909</td>\n",
       "      <td>570437.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>406273.166667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>07288500-d-07288280_200909</td>\n",
       "      <td>406273.166667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>None_sdiff</td>\n",
       "      <td>spatial difference</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      datetime  per            obsprefix          obsnme1  base_obsval1  \\\n",
       "per                                                                       \n",
       "0   2008-09-30    0  07288500-d-07288280      07288500_ss      816717.0   \n",
       "3   2008-03-31    3  07288500-d-07288280  07288500_200803      425160.0   \n",
       "4   2008-09-30    4  07288500-d-07288280  07288500_200809      816717.0   \n",
       "5   2009-03-31    5  07288500-d-07288280  07288500_200903      468096.5   \n",
       "6   2009-09-30    6  07288500-d-07288280  07288500_200909      976710.5   \n",
       "\n",
       "     base_sim_obsval1          obsnme2   base_obsval2  base_sim_obsval2  \\\n",
       "per                                                                       \n",
       "0                 0.0      07288280_ss  274565.500000               0.0   \n",
       "3                 0.0  07288280_200803  255581.650000               0.0   \n",
       "4                 0.0  07288280_200809  274565.500000               0.0   \n",
       "5                 0.0  07288280_200903  280535.333333               0.0   \n",
       "6                 0.0  07288280_200909  570437.333333               0.0   \n",
       "\n",
       "          obs_diff  sim_diff                      obsnme         obsval  \\\n",
       "per                                                                       \n",
       "0    542151.500000       0.0      07288500-d-07288280_ss  542151.500000   \n",
       "3    169578.350000       0.0  07288500-d-07288280_200803  169578.350000   \n",
       "4    542151.500000       0.0  07288500-d-07288280_200809  542151.500000   \n",
       "5    187561.166667       0.0  07288500-d-07288280_200903  187561.166667   \n",
       "6    406273.166667       0.0  07288500-d-07288280_200909  406273.166667   \n",
       "\n",
       "     sim_obsval      obgnme                type  \n",
       "per                                              \n",
       "0           0.0  None_sdiff  spatial difference  \n",
       "3           0.0  None_sdiff  spatial difference  \n",
       "4           0.0  None_sdiff  spatial difference  \n",
       "5           0.0  None_sdiff  spatial difference  \n",
       "6           0.0  None_sdiff  spatial difference  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flux_sdiff.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-03T14:09:13.308180Z",
     "iopub.status.busy": "2023-10-03T14:09:13.307672Z",
     "iopub.status.idle": "2023-10-03T14:09:13.519765Z",
     "shell.execute_reply": "2023-10-03T14:09:13.518637Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Gain in streamflow, $m^3/d$')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "flux_sdiff.index = flux_sdiff.datetime\n",
    "ax = flux_sdiff[['obs_diff', 'sim_diff']].plot()\n",
    "ax.set_ylabel('Gain in streamflow, $m^3/d$')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
